/*** BEGIN file-header ***/
#include <glib-object.h>

/*** END file-header ***/

/*** BEGIN file-production ***/
#include "@filename@"

/*** END file-production ***/

/*** BEGIN value-header ***/
static const G@Type@Value @enum_name@_values[] = {
/*** END value-header ***/

/*** BEGIN value-production ***/
	{ @VALUENAME@, "@VALUENAME@", "@valuenick@" },
/*** END value-production ***/

/*** BEGIN value-tail ***/
	{ 0, NULL, NULL }
};

GType @enum_name@_get_type (void) {
	static GType type = 0;
	if (G_UNLIKELY (type == 0)) {
		type = g_@type@_register_static (g_intern_static_string ("@EnumName@"), @enum_name@_values);
	}
	return type;
}

const gchar *@enum_name@_get_nick (@EnumName@ value) {
	const gsize last = G_N_ELEMENTS (@enum_name@_values);
	
	if (G_LIKELY (value < last && value == @enum_name@_values[value].value)) {
		return @enum_name@_values[value].value_nick;
	} else {
		gsize i;
		for (i = 0; i < last; ++i) {
			if (value == @enum_name@_values[i].value) {
				return @enum_name@_values[i].value_nick;
			}
		}
	}
	
	return NULL;
}

/*** END value-tail ***/
